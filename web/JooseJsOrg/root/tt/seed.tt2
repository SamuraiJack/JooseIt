<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
	<head>
		<meta content="text/html; charset=utf-8" http-equiv="Content-Type">		
		
		<link rel="stylesheet" type="text/css" href="/inc/Task/ExtJS/static/css/ext-all.css"></link>
		
		<script type="text/javascript" src="/inc/Task/Joose/core.js"></script>
		
        <script type="text/javascript" src="/inc/Task/ExtJS/Adapter/Ext.js"></script>
        <script type="text/javascript" src="/inc/JooseX/Bridge/Ext.js"></script>
        <script type="text/javascript" src="/inc/JooseX/Bridge/Ext/Convertor.js"></script>
        <script type="text/javascript" src="/inc/Task/ExtJS/Debug/All.js"></script>
        
        <script type="text/javascript" src="/inc/JooseX/SimpleRequest.js"></script>
        
        <script type="text/javascript" src="/inc/Task/JooseX/Namespace/Depended/core.js"></script>
        
        
        <script type="text/javascript">
        
            use( [ 'JooseJsOrg', 'JooseJsOrg.Router' ], function () {
                new JooseJsOrg({
                  //rootClass       : JooseJsOrg.Root,
                    routerClass     : JooseJsOrg.Router,
                    initialRoute    : '[% displayPath %]'
                }).run()
            })
            
        </script>
        
	</head>
	
	<body>
	</body>
</html>



[%#

        <script type="text/javascript" src="/lib/Jemplate.js"></script>     
        <script type="text/javascript" src="/lib/jScout.js"></script>
        
        <script type="text/javascript" src="/lib/Ext/ux/event/Broadcast.js"></script>
        <script type="text/javascript" src="/lib/Ext/ux/I18n.js"></script>
        
        <script type="text/javascript" src="/lib/Jemplate/preprocess.js"></script>
        <script type="text/javascript" src="/lib/Symbie.js"></script>
        
        <script type="text/javascript" src="/lib/Ext/ux/layout/Coolcard.js"></script>
        <script type="text/javascript" src="/lib/Ext/ux/layout/ColumnFit.js"></script>
        <script type="text/javascript" src="/lib/Ext/ux/layout/RowFitLayout.js"></script>
        
        <script type="text/javascript" src="/lib/Jemplate/I18n/phrase.js"></script>
        <script type="text/javascript" src="/lib/Ext/ux/panel/JemplatedContainer.js"></script>
        
        <script type="text/javascript" src="/lib/SymbieOrg/custom/GradientButton.js"></script>
        <script type="text/javascript" src="/lib/SymbieOrg/MainLayout.js"></script>
        
        <script type="text/javascript" src="/lib/Symbie/LoadMask.js"></script>
        <script type="text/javascript" src="/lib/Symbie/Dispatcher.js"></script>
        
        <script type="text/javascript" src="/lib/Ext/ux/util/Cookies.js"></script>
        <script type="text/javascript" src="/lib/Symbie/Navigator.js"></script>
        
        <script type="text/javascript" src="/lib/Symbie/Widget.js"></script>
        <script type="text/javascript" src="/lib/Symbie/Widget/Root.js"></script>

        <script type="text/javascript">
        
            Ext.onReady(function () {
                if ("createEvent" in document) {
                    DomCompleteEvent = document.createEvent("Events");
                    DomCompleteEvent.initEvent("domcomplete", true, false);
                }
            
            
                Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
            
                var lang = Ext.ux.util.Cookies.get('symbie_org_current_language') || 'en';
                
                use(['Symbie::Dispatcher', 'SymbieOrg::I18n::' + lang],function(){          
                    I18n = SymbieOrg.I18n[lang];
                    
                    var displayPath = "[ % displayPath % ]" || Ext.ux.util.Cookies.get('symbie_org_current_token') || '/SymbieOrg::MainLayout.center/SymbieOrg::Home';
                    
                    Symbie.Dispatcher.dispatch(displayPath, {
                        callback : function(){
                            Ext.DomHelper.append(Ext.getBody(), {
                                tag : 'div',
                                id : 'domcomplete'
                            });
                            
                            if (typeof DomCompleteEvent != 'undefined') window.dispatchEvent(DomCompleteEvent);
                        }
                    });
                });
            });
        </script>


%]